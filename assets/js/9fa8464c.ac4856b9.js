"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[641],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=a,h=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return t?r.createElement(h,o(o({ref:n},c),{},{components:t})):r.createElement(h,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2368:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return u}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=["components"],s={sidebar_position:5},p="Prescription",l={unversionedId:"api/prescription",id:"api/prescription",title:"Prescription",description:"Prescriptions are created by a Medic  with a validated account.",source:"@site/docs/api/prescription.md",sourceDirName:"api",slug:"/api/prescription",permalink:"/prescrypto-docs/docs/api/prescription",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Patient",permalink:"/prescrypto-docs/docs/api/patient"},next:{title:"Location",permalink:"/prescrypto-docs/docs/api/location"}},c=[{value:"List all Prescriptions",id:"list-all-prescriptions",children:[{value:"List a Single Prescription",id:"list-a-single-prescription",children:[],level:3}],level:2},{value:"Create a Prescription",id:"create-a-prescription",children:[{value:"Response",id:"response",children:[],level:3}],level:2},{value:"Resend a Prescription",id:"resend-a-prescription",children:[],level:2},{value:"Download a Prescription in PDF(Base64)",id:"download-a-prescription-in-pdfbase64",children:[],level:2},{value:"Search Prescription",id:"search-prescription",children:[],level:2}],d={toc:c};function u(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"prescription"},"Prescription"),(0,i.kt)("p",null,"Prescriptions are created by a ",(0,i.kt)("a",{parentName:"p",href:"/prescrypto-docs/docs/api/medic"},"Medic"),"  with a validated account. "),(0,i.kt)("h2",{id:"list-all-prescriptions"},"List all Prescriptions"),(0,i.kt)("p",null,"This endpoint will list all the prescriptions generated by the Token of the Medic."),(0,i.kt)("p",null,"The following parameters may be included as part of a URL query string."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"limit"),(0,i.kt)("td",{parentName:"tr",align:null},"Number of results to return per page.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"offset"),(0,i.kt)("td",{parentName:"tr",align:null},"The initial index from which to return the results.")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="GET /api/v2/rx-endpoint/"',title:'"GET','/api/v2/rx-endpoint/"':!0},"import requests\nimport json\n\nurl = \"{{Base_URL}}/api/v2/rx-endpoint/\"\n\npayload={}\nheaders = {\n  'Authorization': 'Token {{Token}}',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data=payload)\n\nprint(response.text)\n")),(0,i.kt)("h3",{id:"list-a-single-prescription"},"List a Single Prescription"),(0,i.kt)("p",null,"You can also filter the information for a single prescription, by adding the prescription id to the endpoint route."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="GET /api/v2/rx-endpoint/{{rx_ID}}"',title:'"GET','/api/v2/rx-endpoint/{{rx_ID}}"':!0},"{{Base_URL}}/api/v2/rx-endpoint/123/\n")),(0,i.kt)("h2",{id:"create-a-prescription"},"Create a Prescription"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="POST /api/v2/rx-endpoint"',title:'"POST','/api/v2/rx-endpoint"':!0},'import requests\nimport json\n\nurl = "{{Base_URL}}/api/v2/rx-endpoint/"\n\npayload = json.dumps({\n  "diagnosis": "Gripe por virus de la gripe estacional identificado (1E30)",\n  "medications": [\n    {\n      "presentation": "Ibuprofeno ",\n      "instructions": "Tomar 1 pastilla cada 8 horas durante 7 dias",\n    },\n    {\n      "presentation": "Aspirina Protect",\n      "instructions": "Tomar 1 pastilla cada 8 horas durante 7 dias",\n    }\n  ],\n  "extras": "Fiebre 38\xbaC, Cefaleas, escalofrios",\n  "patient": {\n    "uid":"123123-12312-12312-123-123123123"\n  }\n})\nheaders = {\n  \'Authorization\': \'Token {{Token}}\',\n  \'Content-Type\': \'application/json\'\n}\n\nresponse = requests.request("POST", url, headers=headers, data=payload)\n\nprint(response.text)\n')),(0,i.kt)("h3",{id:"response"},"Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 201] Success!"',title:'"[StatusCode:',"201]":!0,'Success!"':!0},'{\n    "id": 123,\n    "hospital": 1,\n    "clinic": null,\n    "medic": "Elizabeth@prescrypto.com",\n    "patient": {\n        "uid":"123123-12312-12312-123-123123123",\n        "name": "George Constanza",\n        "email": "constanza@gmail.com"\n    },\n    "diagnosis": "Gripe por virus de la gripe estacional identificado (1E30)",\n    "medications": [\n        {\n            "id": 22,\n            "presentation": "Ibuprofeno",\n            "instructions": "Tomar 1 pastilla cada 8 horas durante 7 dias",\n            "cost": 0.0,\n            "bought": false,\n            "qty": 1,\n            "bought_qty": 0,\n            "drug_upc": "",\n            "order_id": 0,\n            "category": "standard_drug",\n            "qty_label": "1"\n        },\n        {\n            "id": 23,\n            "presentation": "Aspirina Protect",\n            "instructions": "Tomar 1 pastilla cada 8 horas durante 7 dias",\n            "cost": 0.0,\n            "bought": false,\n            "qty": 1,\n            "bought_qty": 0,\n            "drug_upc": "",\n            "order_id": 0,\n            "category": "standard_drug",\n            "qty_label": "1"\n        }\n    ],\n    "extras": "Fiebre 38\xbaC, Cefaleas, escalofrios",\n    "signature": "12sd2jaskjnd13EsteEsElIDDeLaReceta",\n    "created_at": "2020-06-30",\n    "sent": null,\n    "send_rx": true,\n    "additional_data": {},\n    "show_diagnosis": false,\n    "rejected": false,\n    "bought": false,\n    "cta_link": "https://www.prescrypto.com/r/Vj"\n}\n\n')),(0,i.kt)("h2",{id:"resend-a-prescription"},"Resend a Prescription"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="POST /api/v2/rx/resend/{{signature}}/"',title:'"POST','/api/v2/rx/resend/{{signature}}/"':!0},'import requests\nimport json\n\nurl = "{{Base_URL}}/api/v2/rx/resend/{{signature}}/"\n\npayload = json.dumps({\n  "email": "paciente@prescrypto.com",\n  "cc": "copia@prescrypto.com"\n})\nheaders = {\n  \'Authorization\': \'Token {{Token}}\',\n  \'Content-Type\': \'application/json\'\n}\n\nresponse = requests.request("POST", url, headers=headers, data=payload)\n\nprint(response.text)\n')),(0,i.kt)("h2",{id:"download-a-prescription-in-pdfbase64"},"Download a Prescription in PDF(Base64)"),(0,i.kt)("p",null,"Prescriptions can be downloaded in their PDF representation with this endpoint, the response will be in base64, which will be needed to decode from base64 to PDF."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="GET /api/v2/rx/pdf/{{eRx_Signature}}/"',title:'"GET','/api/v2/rx/pdf/{{eRx_Signature}}/"':!0},"import requests\nimport json\n\nurl = \"{{Base_URL}}/api/v2/rx/pdf/eb2bd28dfac8f64207f7ad356d30a461741fc728ad55fe84c321ccd1e32634b3/\"\n\npayload = json.dumps({})\nheaders = {\n  'Authorization': 'Token {{Token}}',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data=payload)\n\nprint(response.text)\n")),(0,i.kt)("h2",{id:"search-prescription"},"Search Prescription"),(0,i.kt)("p",null,"A Prescription can be searched by the name of the ",(0,i.kt)("a",{parentName:"p",href:"/prescrypto-docs/docs/api/patient"},"Patient"),", the email, or the diagnosis."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="GET /api/v2/rx-endpoint/?search=Gripe/"',title:'"GET',"/api/v2/rx-endpoint/?search":'Gripe/"'},"import requests\n\nurl = \"{{Base_URL}}/api/v2/rx-endpoint/?search={{query}}\"\n\npayload={}\nheaders = {\n  'Authorization': 'Token {{Token}}'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data=payload)\n\nprint(response.text)\n")),(0,i.kt)("p",null,"[EOF]"))}u.isMDXComponent=!0}}]);