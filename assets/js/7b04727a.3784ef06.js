(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[649],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(f,a(a({ref:t},l),{},{components:n})):r.createElement(f,a({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},721:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return u}});var r=n(2122),i=n(9756),o=(n(7294),n(3905)),a=["components"],c={sidebar_position:1},s="Intro",p={unversionedId:"integration_deeplink.md/int_dp_intro",id:"integration_deeplink.md/int_dp_intro",isDocsHomePage:!1,title:"Intro",description:'For this kind of integration the Medic user will access Prescrypto through a "Deeplink", this link will autolog the user and can pre-fill certaing fields as the patient data.',source:"@site/docs/integration_deeplink.md/int_dp_intro.md",sourceDirName:"integration_deeplink.md",slug:"/integration_deeplink.md/int_dp_intro",permalink:"/prescrypto-docs/docs/integration_deeplink.md/int_dp_intro",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Prescrypto API Docs",permalink:"/prescrypto-docs/docs/intro"},next:{title:"Medic",permalink:"/prescrypto-docs/docs/integration_deeplink.md/int_dp_Medic"}},l=[{value:"Medic",id:"medic",children:[]},{value:"POST /api/v2/medics/",id:"post-apiv2medics",children:[]}],d={toc:l};function u(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"intro"},"Intro"),(0,o.kt)("p",null,'For this kind of integration the Medic user will access Prescrypto through a "Deeplink", this link will autolog the user and can pre-fill certaing fields as the patient data.'),(0,o.kt)("h2",{id:"medic"},"Medic"),(0,o.kt)("p",null,'The request body should be a "application/json" encoded object.'),(0,o.kt)("h2",{id:"post-apiv2medics"},"POST /api/v2/medics/"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'mdx title="POST /api/v2/medics/"',mdx:!0,title:'"POST','/api/v2/medics/"':!0},'import requests\nimport json\n# Assign the necessary parameters for the request (url and parameters payload)\nurl = "/api/v2/medics/"\n\nheaders = {\'content-type\': \'application/json\'}\npayload = {\n    "name": <name>,\n    "password": <password>,\n    "email": <email>,\n    "hospital": <hospital>,\n    "date_of_birth": <date_of_birth>,\n    "cedula_prof": <cedula_prof>,\n    "specialty_no": <specialty_no>,\n    "specialty": <specialty>,\n    "alma_mater": <alma_mater>,\n    "female": <female>,\n    "is_active": <is_active>,\n}\n# Execute the request and get the result\nresult = requests.post(url=url, data=json.dumps(payload), headers=headers)\nprint(result.json())\n\n')))}u.isMDXComponent=!0}}]);