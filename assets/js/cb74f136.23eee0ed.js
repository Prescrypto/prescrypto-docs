"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(a),u=i,k=c["".concat(d,".").concat(u)]||c[u]||m[u]||r;return a?n.createElement(k,l(l({ref:t},p),{},{components:a})):n.createElement(k,l({ref:t},p))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},3401:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var n=a(7462),i=(a(7294),a(3905));const r={sidebar_position:1},l="Medic",o={unversionedId:"api/medic",id:"api/medic",title:"Medic",description:"Medics are the basic pilars that can perform all different actions in the platform from creating Prescriptions, Patients, to Hospitals. For all the actions that the Medic will perform, use the Medic's Token for Autorization.",source:"@site/docs/api/medic.md",sourceDirName:"api",slug:"/api/medic",permalink:"/prescrypto-docs/docs/api/medic",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Prescrypto API Docs",permalink:"/prescrypto-docs/docs/intro"},next:{title:"Hospital",permalink:"/prescrypto-docs/docs/api/hospital"}},d={},s=[{value:"List Medics",id:"list-medics",level:2},{value:"GET Medics List",id:"get-medics-list",level:4},{value:"Response to Medics List",id:"response-to-medics-list",level:4},{value:"GET Detail Medic",id:"get-detail-medic",level:4},{value:"Response to Detail Medic",id:"response-to-detail-medic",level:4},{value:"Create Medic",id:"create-medic",level:2},{value:"Body Fields",id:"body-fields",level:3},{value:"POST Create Medic",id:"post-create-medic",level:4},{value:"Response to Create Medic",id:"response-to-create-medic",level:4},{value:"Update Medic",id:"update-medic",level:2},{value:"Request Body",id:"request-body",level:3},{value:"PATCH Update Medic",id:"patch-update-medic",level:4},{value:"Response to Update Medic",id:"response-to-update-medic",level:4}],p={toc:s};function m(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"medic"},"Medic"),(0,i.kt)("p",null,"Medics are the basic pilars that can perform all different actions in the platform from creating Prescriptions, Patients, to Hospitals. For all the actions that the Medic will perform, use the Medic's Token for Autorization."),(0,i.kt)("h2",{id:"list-medics"},"List Medics"),(0,i.kt)("p",null,"This endpoint will list all medics created with your token."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Query Parameters")),(0,i.kt)("p",null,"The following parameters may be included as part of a URL query string."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"limit"),(0,i.kt)("td",{parentName:"tr",align:null},"Number of results to return per page.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"offset"),(0,i.kt)("td",{parentName:"tr",align:null},"The initial index from which to return the results.")))),(0,i.kt)("h4",{id:"get-medics-list"},"GET Medics List"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="GET /api/v2/medics"',title:'"GET','/api/v2/medics"':!0},"import requests\nimport json\n# Assign the necessary parameters for the request (url and parameters payload)\nurl = \"{{BASE_URL}}/api/v2/medics/\"\nheaders = {\n  'Authorization': 'Token {{YOUR_TOKEN}}'\n}\n\nresult = requests.get(url=url, headers=headers)\nprint(result.json())\n")),(0,i.kt)("h4",{id:"response-to-medics-list"},"Response to Medics List"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 200] Success there\'s the list of your Medics Created"',title:'"[StatusCode:',"200]":!0,Success:!0,"there's":!0,the:!0,list:!0,of:!0,your:!0,Medics:!0,'Created"':!0},'{\n    "count": 2,\n    "next": "{{Base_URL}}/api/v2/medics/?limit=15&offset=15",\n    "previous": null,\n    "results": [\n        {\n            "id": 1,\n            "name": "Elizabeth Blackwell",\n            "email": "hola@prescrypto.com",\n            "hospital": 7,\n            "date_of_birth": "1821-02-03",\n            "cedula_prof": "123123123",\n            "specialty_no": "123123123",\n            "specialty": "Medico Cirujano",\n            "alma_mater": "Geneva College",\n            "female": true,\n            "is_active": true,\n            "specialty_verified": false,\n            "campaign": "",\n            "is_admin_membership": true\n        },\n        {\n            "id": 11,\n            "name": "Matilde Montoya",\n            "email": "test@prescrypto.com",\n            "hospital": 7,\n            "date_of_birth": "1957-03-14",\n            "cedula_prof": "123123123",\n            "specialty_no": "123123123",\n            "specialty": "Medico Cirujano",\n            "alma_mater": " Escuela Nacional de Medicina",\n            "female": false,\n            "is_active": true,\n            "specialty_verified": false,\n            "campaign": "",\n            "is_admin_membership": false\n        }\n    ]\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 401] Invalid Token"',title:'"[Error:',"401]":!0,Invalid:!0,'Token"':!0},'{\n    "message": "Invalid Token"\n}\n')),(0,i.kt)("h4",{id:"get-detail-medic"},"GET Detail Medic"),(0,i.kt)("p",null,"You can also filter the information for a single account, by adding the Medic id to the endpoint route."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="GET /api/v2/medics/{{Medic_ID}}/"',title:'"GET','/api/v2/medics/{{Medic_ID}}/"':!0},"import requests\nimport json\n# Assign the necessary parameters for the request (url and parameters payload)\nurl = \"{{BASE_URL}}/api/v2/medics/{{MEDIC_ID}}\"\nheaders = {\n  'Authorization': f'Token {{YOUR_TOKEN}}'\n}\n\nresult = requests.get(url=url, headers=headers)\nprint(result.json())\n")),(0,i.kt)("h4",{id:"response-to-detail-medic"},"Response to Detail Medic"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=\"[StatusCode: 200] Success there's json with medic's detail\"",title:'"[StatusCode:',"200]":!0,Success:!0,"there's":!0,json:!0,with:!0,"medic's":!0,'detail"':!0},'{\n    "id": 1,\n    "name": "Elizabeth Blackwell",\n    "email": "hola@prescrypto.com",\n    "hospital": 7,\n    "date_of_birth": "1821-02-03",\n    "cedula_prof": "123123123",\n    "specialty_no": "123123123",\n    "specialty": "Medico Cirujano",\n    "alma_mater": "Geneva College",\n    "female": true,\n    "is_active": true,\n    "specialty_verified": false,\n    "campaign": "",\n    "is_admin_membership": true\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 404] Medical not found or your token do not created the medic"',title:'"[Error:',"404]":!0,Medical:!0,not:!0,found:!0,or:!0,your:!0,token:!0,do:!0,created:!0,the:!0,'medic"':!0},'{\n    "message": "Not found"\n}\n')),(0,i.kt)("h2",{id:"create-medic"},"Create Medic"),(0,i.kt)("p",null,'You can create as many Medics as needed. A Medic requires to be a member of an "Hospital" which can be created during or after the creation of the Medic, usually creating the "Hospital" after is what is best suited for most of integrations.'),(0,i.kt)("h3",{id:"body-fields"},"Body Fields"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"name ",(0,i.kt)("inlineCode",{parentName:"td"},"required")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," for medic name")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"password ",(0,i.kt)("inlineCode",{parentName:"td"},"required")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," for medic password, can only take effect during medic creation")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"email ",(0,i.kt)("inlineCode",{parentName:"td"},"required")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," 'Email address has to be unique or you'll get an error")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"hospital"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")," , (Optional) Token user has to be the ADMIN of the Hospital id")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"date_of_birth"),(0,i.kt)("td",{parentName:"tr",align:null},"format: yyyy-mm-dd  eg 1990-12-31")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"cedula_prof"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int"),' number of the medical "C\xe9dula Profesional" emited by the SEP ("Secretar\xeda de Educaci\xf3n P\xfablica")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"specialty_no"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int"),' number of the medical "C\xe9dula Profesional" of Speciality emited by the SEP')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"specialty"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," name of the medical branch that the medic practice")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"alma_mater"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," name of the University")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"female"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean"),' Gender of the medic, will be used for medic title "Dr" or "Dra"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"is_active"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")," to deactive or active accounts, this has nothing to do with cedula validation")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"campaign"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," Assigns a campaign to a Medic, if you need a specific campaign ask an admin to create it first")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"is_admin_membership"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean"),' to indicate what kind of ownership the Medic has to an hospital, can be an "Admin" or a "Member", Admins can edit the Hospital, members only use it')))),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Don\u2019t forget to save your medic token, as you\u2019ll need it later to create a Deeplink for logging in.")),(0,i.kt)("h4",{id:"post-create-medic"},"POST Create Medic"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="POST /api/v2/medics/"',title:'"POST','/api/v2/medics/"':!0},'import requests\nimport json\n\nurl = "{{BASE_URL}}/api/v2/medics/"\n\npayload = json.dumps({\n  "name": "Nombre del Medico",\n  "password": "Password del Medico",\n  "email": "name@domain.com",\n  "date_of_birth": "1992-09-22",\n  "cedula_prof": "123456789",\n  "specialty_no": "",\n  "specialty": "Medicina General",\n  "alma_mater": "Universidad Nacional Aut\xf3noma de M\xe9xico",\n  "female": False,\n  "is_active": True,\n  "campaign": "PalabraClaveAsociadaAUnaCampa\xf1a"\n})\nheaders = {\n  \'Authorization\': \'Token {{YOUR_TOKEN}}\',\n  \'Content-Type\': \'application/json\'\n}\n\nresponse = requests.request("POST", url, headers=headers, data=payload)\n\nprint(response.text)\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},'If you want to add this Medic to an Hospital that you have created, you can add the "Hospital: {id}" to the body.')),(0,i.kt)("h4",{id:"response-to-create-medic"},"Response to Create Medic"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 201] The Medic has been created successfully"',title:'"[StatusCode:',"201]":!0,The:!0,Medic:!0,has:!0,been:!0,created:!0,'successfully"':!0},'{\n    "id": 1,\n    "token": "eaeaeaeaeae123eaeaedummyToken",\n    "name": "Algun Nombre",\n    "password": "pbkdf2_sha256$150000$X1Very36lhLongZ9GnBAStringnI5KWOnrnVQ=",\n    "email": "name@domain.com",\n    "hospital": null,\n    "date_of_birth": "1992-09-22",\n    "cedula_prof": "123456789",\n    "specialty_no": "",\n    "specialty": "Medicina General",\n    "alma_mater": "Universidad Nacional Aut\xf3noma de M\xe9xico",\n    "female": false,\n    "is_active": true,\n    "specialty_verified": false,\n    "campaign": "PalabraClaveAsociadaAUnaCampa\xf1a",\n    "is_admin_membership": null\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 400] You are not the admin of the Hospital id"',title:'"[Error:',"400]":!0,You:!0,are:!0,not:!0,the:!0,admin:!0,of:!0,Hospital:!0,'id"':!0},'{\n    "message": "You do not have sufficient permissions to assign this hospital: 1"\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 400] The email already exists in Prescrypto, you need to use a new one"',title:'"[Error:',"400]":!0,The:!0,email:!0,already:!0,exists:!0,in:!0,"Prescrypto,":!0,you:!0,need:!0,to:!0,use:!0,a:!0,new:!0,'one"':!0},'[\n    "duplicate key value violates unique constraint \\"medics_medic_email_c4aaaa6a_uniq\\"\\nDETAIL:  Key (email)=(name@domain.com) already exists.\\n"\n]\n')),(0,i.kt)("h2",{id:"update-medic"},"Update Medic"),(0,i.kt)("p",null,"You can update partial data of a Medic already created."),(0,i.kt)("h3",{id:"request-body"},"Request Body"),(0,i.kt)("p",null,'The request body should be a "application/json" encoded object, containing the following items.'),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"name"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," for medic name")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"email"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," 'Email address has to be unique or you'll get an error")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"hospital"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int")," , Token user has to be the ADMIN of the Hospital id")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"date_of_birth"),(0,i.kt)("td",{parentName:"tr",align:null},"format: yyyy-mm-dd  eg 1990-12-31")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"cedula_prof"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int"),' number of the medical "C\xe9dula Profesional" emited by the SEP')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"specialty_no"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"int"),' number of the medical "C\xe9dula Profesional" of Speciality emited by the SEP')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"specialty"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," name of the medical branch that the medic practice")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"alma_mater"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," name of the University")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"female"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean"),' Gender of the medic, will be used for medic title "Dr" or "Dra"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"is_active"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")," to deactive or active accounts, this has nothing to do with cedula validation")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"campaign"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," Assigns a campaign to a Medic, if you need a specific campaign ask an admin to create it first")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"is_admin_membership"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean"),' to indicate what kind of ownership the Medic has to an hospital, can be an "Admin" or a "Member", Admins can edit the Hospital, members only use it')))),(0,i.kt)("h4",{id:"patch-update-medic"},"PATCH Update Medic"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="PATCH /api/v2/medics/{{Medic_ID}}"',title:'"PATCH','/api/v2/medics/{{Medic_ID}}"':!0},"import requests\nimport json\n\nurl = \"{{BASE_URL}}/api/v2/medics/{{Medic_ID}}/\"\n\npayload = json.dumps({\n  \"name\": \"Daniel Hale Williams\"\n})\nheaders = {\n  'Authorization': 'Token {{YOUR_TOKEN}}',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"PATCH\", url, headers=headers, data=payload)\n\nprint(response.text)\n")),(0,i.kt)("h4",{id:"response-to-update-medic"},"Response to Update Medic"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 202] The Medic has been updated successfully"',title:'"[StatusCode:',"202]":!0,The:!0,Medic:!0,has:!0,been:!0,updated:!0,'successfully"':!0},'{\n    "id": 1,\n    "name": "Daniel Hale Williams",\n    "email": "hola@prescrypto.com",\n    "hospital": 1,\n    "date_of_birth": "1956-01-18",\n    "cedula_prof": "123456789",\n    "specialty_no": "",\n    "specialty": "Medicina General",\n    "alma_mater": "Chicago Medical College",\n    "female": false,\n    "is_active": true,\n    "specialty_verified": false,\n    "campaign": "",\n    "is_admin_membership": null\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 404] Medical not found or your token do not created the medic"',title:'"[Error:',"404]":!0,Medical:!0,not:!0,found:!0,or:!0,your:!0,token:!0,do:!0,created:!0,the:!0,'medic"':!0},'{\n    "message": "Not found"\n}\n')),(0,i.kt)("p",null,"[EOF]"))}m.isMDXComponent=!0}}]);