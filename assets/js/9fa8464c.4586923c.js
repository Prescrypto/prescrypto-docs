"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[641],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(t),m=a,g=u["".concat(l,".").concat(m)]||u[m]||c[m]||i;return t?r.createElement(g,s(s({ref:n},d),{},{components:t})):r.createElement(g,s({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=u;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var p=2;p<i;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2368:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const i={sidebar_position:5},s="Prescription",o={unversionedId:"api/prescription",id:"api/prescription",title:"Prescription",description:"Prescriptions are created by a Medic  with a validated account.",source:"@site/docs/api/prescription.md",sourceDirName:"api",slug:"/api/prescription",permalink:"/prescrypto-docs/docs/api/prescription",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Patient",permalink:"/prescrypto-docs/docs/api/patient"},next:{title:"Location",permalink:"/prescrypto-docs/docs/api/location"}},l={},p=[{value:"List all Prescriptions",id:"list-all-prescriptions",level:2},{value:"GET List all Prescriptions",id:"get-list-all-prescriptions",level:4},{value:"Response to List all Prescriptions",id:"response-to-list-all-prescriptions",level:4},{value:"List a Single Prescription",id:"list-a-single-prescription",level:3},{value:"GET List a Single Prescription",id:"get-list-a-single-prescription",level:4},{value:"Response to List all Prescriptions",id:"response-to-list-all-prescriptions-1",level:4},{value:"Create a Prescription",id:"create-a-prescription",level:2},{value:"Response to Create a Prescription",id:"response-to-create-a-prescription",level:4},{value:"Resend a Prescription",id:"resend-a-prescription",level:2},{value:"POST Resend a Prescription",id:"post-resend-a-prescription",level:4},{value:"Respose to Resend a Prescription",id:"respose-to-resend-a-prescription",level:4},{value:"Download a Prescription in PDF(Base64)",id:"download-a-prescription-in-pdfbase64",level:2},{value:"GET Download a Prescription",id:"get-download-a-prescription",level:4},{value:"Respose to Download a Prescription",id:"respose-to-download-a-prescription",level:4},{value:"Search Prescription",id:"search-prescription",level:2},{value:"GET Search Prescription",id:"get-search-prescription",level:4},{value:"Respose to Search Prescription",id:"respose-to-search-prescription",level:4}],d={toc:p};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"prescription"},"Prescription"),(0,a.kt)("p",null,"Prescriptions are created by a ",(0,a.kt)("a",{parentName:"p",href:"/prescrypto-docs/docs/api/medic"},"Medic"),"  with a validated account. "),(0,a.kt)("h2",{id:"list-all-prescriptions"},"List all Prescriptions"),(0,a.kt)("p",null,"This endpoint will list all the prescriptions generated by the Token of the Medic."),(0,a.kt)("p",null,"The following parameters may be included as part of a URL query string."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"limit"),(0,a.kt)("td",{parentName:"tr",align:null},"Number of results to return per page.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"offset"),(0,a.kt)("td",{parentName:"tr",align:null},"The initial index from which to return the results.")))),(0,a.kt)("h4",{id:"get-list-all-prescriptions"},"GET List all Prescriptions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="GET /api/v2/rx-endpoint/"',title:'"GET','/api/v2/rx-endpoint/"':!0},"import requests\n\nurl = \"{{Base_URL}}/api/v2/rx-endpoint/\"\n\nheaders = {\n  'Authorization': 'Token {{Token}}'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)\n")),(0,a.kt)("h4",{id:"response-to-list-all-prescriptions"},"Response to List all Prescriptions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 200]"',title:'"[StatusCode:','200]"':!0},'{    \n    "count": 2,\n    "next": "{{Base_URL}}/api/v2/medics/?limit=15&offset=15",\n    "previous": null,\n    "results": [\n        {\n            "id": 2714,\n            "hospital": {\n                "id": 7,\n                "patron": "Hospital de Prueba",\n                "location": "Nombre de la Calle, Colonia, CP, Alcaldia, Estado"\n            },\n            "clinic": null,\n            "medic": "hola@prescrypto.com",\n            "patient": {\n                "uid": "1231231-123123-12313-123-123123123",\n                "name": "Ely de Prescrypto",\n                "email": "test@prescrpyot.com",\n                "phone": "",\n                "date_of_birth": "2000-03-13",\n                "gender": "M"\n            },\n            "diagnosis": "",\n            "medications": [\n                {\n                    "id": 393,\n                    "presentation": "Aspirina 30 Tabletas (\xc1cido Acetilsalic\xedlico 100 mg)",\n                    "instructions": "Tomar una cada 8 horas",\n                    "drug": "Aspirina 30 Tabletas (\xc1cido Acetilsalic\xedlico 100 mg)",\n                    "cost": 0.0,\n                    "bought": false,\n                    "qty": 1,\n                    "bought_qty": 0,\n                    "category": "standard_drug",\n                    "qty_label": "",\n                    "drug_upc": "1234567890"\n                }\n            ],\n            "extras": "",\n            "signature": "12345678990",\n            "created_at": "2023-09-07",\n            "sent": true,\n            "send_rx": true,\n            "show_diagnosis": false,\n            "bought": false,\n            "rejected": false,\n            "cta_link": "",\n            "status": {\n                "rx_status": [\n                    "available",\n                    "Disponible"\n                ],\n                "sent_status": [\n                    "sent_email",\n                    "Email enviado"\n                ]\n            },\n            "reason_of_rejected": ""\n        },\n        {\n            "id": 2713,\n            "hospital": {\n                "id": 7,\n                "patron": "Hospital de Prueba",\n                "location": "Nombre de la Calle, Colonia, CP, Alcaldia, Estado"\n            },\n            "clinic": null,\n            "medic": "jason@prescrypto.com",\n            "patient": {\n                "uid": "1231231-123123-12313-123-123123123",\n                "name": "Ely de Prescrypto",\n                "email": "test@prescrpyto.com",\n                "phone": "",\n                "date_of_birth": "2000-03-13",\n                "gender": "M"\n            },\n            "diagnosis": "",\n            "medications": [\n                {\n                    "id": 3938,\n                    "presentation": "Aspirina",\n                    "instructions": "Tomar una cada 8 horas",\n                    "drug": "Aspirina 30 Tabletas (\xc1cido Acetilsalic\xedlico 100 mg)",\n                    "cost": 0.0,\n                    "bought": false,\n                    "qty": 1,\n                    "bought_qty": 0,\n                    "category": "standard_drug",\n                    "qty_label": "",\n                    "drug_upc": "1234567890"\n                }\n            ],\n            "extras": "",\n            "signature": "1234567890",\n            "created_at": "2023-09-08",\n            "sent": true,\n            "send_rx": true,\n            "show_diagnosis": false,\n            "bought": false,\n            "rejected": false,\n            "cta_link": "",\n            "status": {\n                "rx_status": [\n                    "available",\n                    "Disponible"\n                ],\n                "sent_status": [\n                    "sent_email",\n                    "Email enviado"\n                ]\n            },\n            "reason_of_rejected": ""\n        }\n    ]\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 401] Invalid Token"',title:'"[Error:',"401]":!0,Invalid:!0,'Token"':!0},'{\n    "message": "Invalid Token"\n}\n')),(0,a.kt)("h3",{id:"list-a-single-prescription"},"List a Single Prescription"),(0,a.kt)("p",null,"You can also filter the information for a single prescription, by adding the prescription id to the endpoint route."),(0,a.kt)("h4",{id:"get-list-a-single-prescription"},"GET List a Single Prescription"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="GET /api/v2/rx-endpoint/{{rx_ID}}"',title:'"GET','/api/v2/rx-endpoint/{{rx_ID}}"':!0},"import requests\nimport json\n\nurl = \"{{Base_URL}}/api/v2/rx-endpoint/{{rx_ID}}\"\n\nheaders = {\n  'Authorization': 'Token {{Token}}'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)\n")),(0,a.kt)("h4",{id:"response-to-list-all-prescriptions-1"},"Response to List all Prescriptions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 200]"',title:'"[StatusCode:','200]"':!0},'{   \n    "count": 1,\n    "next": "{{Base_URL}}/api/v2/medics/?limit=15&offset=15",\n    "previous": null,\n    "results": [\n        {\n            "id": 2714,\n            "hospital": {\n                "id": 7,\n                "patron": "Hospital de Prueba",\n                "location": "Nombre de la Calle, Colonia, CP, Alcaldia, Estado"\n            },\n            "clinic": null,\n            "medic": "hola@prescrypto.com",\n            "patient": {\n                "uid": "1231231-123123-12313-123-123123123",\n                "name": "Ely de Prescrypto",\n                "email": "test@prescrpyot.com",\n                "phone": "",\n                "date_of_birth": "2000-03-13",\n                "gender": "M"\n            },\n            "diagnosis": "",\n            "medications": [\n                {\n                    "id": 393,\n                    "presentation": "Aspirina",\n                    "instructions": "Tomar una cada 8 horas",\n                    "drug": "Aspirina 30 Tabletas (\xc1cido Acetilsalic\xedlico 100 mg)",\n                    "cost": 0.0,\n                    "bought": false,\n                    "qty": 1,\n                    "bought_qty": 0,\n                    "category": "standard_drug",\n                    "qty_label": "",\n                    "drug_upc": "1234567890"\n                }\n            ],\n            "extras": "",\n            "signature": "12345678990",\n            "created_at": "2023-09-07",\n            "sent": true,\n            "send_rx": true,\n            "show_diagnosis": false,\n            "bought": false,\n            "rejected": false,\n            "cta_link": "",\n            "status": {\n                "rx_status": [\n                    "available",\n                    "Disponible"\n                ],\n                "sent_status": [\n                    "sent_email",\n                    "Email enviado"\n                ]\n            },\n            "reason_of_rejected": ""\n        }\n    ]\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 404] Prescription not found"',title:'"[Error:',"404]":!0,Prescription:!0,not:!0,'found"':!0},'{\n    "message": "Not found"\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 401] Invalid Token"',title:'"[Error:',"401]":!0,Invalid:!0,'Token"':!0},'{\n    "message": "Invalid Token"\n}\n')),(0,a.kt)("h2",{id:"create-a-prescription"},"Create a Prescription"),(0,a.kt)("p",null,"####POST Create a Prescription"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="POST /api/v2/rx-endpoint"',title:'"POST','/api/v2/rx-endpoint"':!0},'import requests\nimport json\n\nurl = "{{Base_URL}}/api/v2/rx-endpoint/"\n\npayload = json.dumps({\n  "diagnosis": "Gripe por virus de la gripe estacional identificado (1E30)",\n  "medications": [\n    {\n      "presentation": "Ibuprofeno ",\n      "instructions": "Tomar 1 pastilla cada 8 horas durante 7 dias",\n    },\n    {\n      "presentation": "Aspirina Protect",\n      "instructions": "Tomar 1 pastilla cada 8 horas durante 7 dias",\n    }\n  ],\n  "extras": "Fiebre 38\xbaC, Cefaleas, escalofrios",\n  "patient": {\n    "uid":"123123-12312-12312-123-123123123"\n  }\n})\nheaders = {\n  \'Authorization\': \'Token {{Token}}\',\n  \'Content-Type\': \'application/json\'\n}\n\nresponse = requests.request("POST", url, headers=headers, data=payload)\n\nprint(response.text)\n')),(0,a.kt)("h4",{id:"response-to-create-a-prescription"},"Response to Create a Prescription"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 200] Success!"',title:'"[StatusCode:',"200]":!0,'Success!"':!0},'{\n    "id": 123,\n    "hospital": 1,\n    "clinic": null,\n    "medic": "elizabeth@prescrypto.com",\n    "patient": {\n        "uid": "123123-12312-12312-123-123123123",\n        "name": "George Constanza",\n        "email": "constanza@gmail.com"\n    },\n    "diagnosis": "Gripe por virus de la gripe estacional identificado (1E30)",\n    "medications": [\n        {\n            "id": 22,\n            "presentation": "Ibuprofeno",\n            "instructions": "Tomar 1 pastilla cada 8 horas durante 7 dias",\n            "cost": 0.0,\n            "bought": false,\n            "qty": 1,\n            "bought_qty": 0,\n            "drug_upc": "",\n            "order_id": 0,\n            "category": "standard_drug",\n            "qty_label": "1"\n        },\n        {\n            "id": 23,\n            "presentation": "Aspirina Protect",\n            "instructions": "Tomar 1 pastilla cada 8 horas durante 7 dias",\n            "cost": 0.0,\n            "bought": false,\n            "qty": 1,\n            "bought_qty": 0,\n            "drug_upc": "",\n            "order_id": 0,\n            "category": "standard_drug",\n            "qty_label": "1"\n        }\n    ],\n    "extras": "Fiebre 38\xbaC, Cefaleas, escalofrios",\n    "signature": "12sd2jaskjnd13",\n    "created_at": "2020-06-30",\n    "sent": null,\n    "send_rx": true,\n    "additional_data": {},\n    "show_diagnosis": false,\n    "rejected": false,\n    "bought": false,\n    "cta_link": ""\n}\n\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 400] The required field field_name is missing"',title:'"[Error:',"400]":!0,The:!0,required:!0,field:!0,field_name:!0,is:!0,'missing"':!0},'{\n    "field_name": [\n        "This field is required."\n    ]\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 401] Invalid Token"',title:'"[Error:',"401]":!0,Invalid:!0,'Token"':!0},'{\n    "message": "Invalid Token"\n}\n')),(0,a.kt)("h2",{id:"resend-a-prescription"},"Resend a Prescription"),(0,a.kt)("h4",{id:"post-resend-a-prescription"},"POST Resend a Prescription"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="POST /api/v2/rx/resend/{{signature}}/"',title:'"POST','/api/v2/rx/resend/{{signature}}/"':!0},'import requests\nimport json\n\nurl = "{{Base_URL}}/api/v2/rx/resend/{{signature}}/"\n\npayload = json.dumps({\n  "email": "paciente@prescrypto.com",\n  "cc": "copia@prescrypto.com"\n})\nheaders = {\n  \'Authorization\': \'Token {{Token}}\',\n  \'Content-Type\': \'application/json\'\n}\n\nresponse = requests.request("POST", url, headers=headers, data=payload)\n\nprint(response.text)\n')),(0,a.kt)("h4",{id:"respose-to-resend-a-prescription"},"Respose to Resend a Prescription"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 200] Success! "',title:'"[StatusCode:',"200]":!0,"Success!":!0,'"':!0},'{\n    "message": "The prescription has been resent, if delivery problems persist, verify that your patient has accepted to receive mail from Prescrypto and that it is not arriving in the spam folder."\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 404] Rx not found"',title:'"[Error:',"404]":!0,Rx:!0,not:!0,'found"':!0},'{\n    "message": "Rx not found with signature: 1234567890"\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 401] Invalid Token"',title:'"[Error:',"401]":!0,Invalid:!0,'Token"':!0},'{\n    "message": "Invalid Token"\n}\n')),(0,a.kt)("h2",{id:"download-a-prescription-in-pdfbase64"},"Download a Prescription in PDF(Base64)"),(0,a.kt)("p",null,"Prescriptions can be downloaded in their PDF representation with this endpoint, the response will be in base64, which will be needed to decode from base64 to PDF."),(0,a.kt)("h4",{id:"get-download-a-prescription"},"GET Download a Prescription"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="GET /api/v2/rx/pdf/{{eRx_Signature}}/"',title:'"GET','/api/v2/rx/pdf/{{eRx_Signature}}/"':!0},"import requests\n\nurl = \"{{Base_URL}}/api/v2/rx/pdf/{{eRx_Signature}}/\"\n\nheaders = {\n  'Authorization': 'Token {{Token}}',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)\n")),(0,a.kt)("h4",{id:"respose-to-download-a-prescription"},"Respose to Download a Prescription"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 200] Success! "',title:'"[StatusCode:',"200]":!0,"Success!":!0,'"':!0},'{\n    "pdf": "pdf_in_base_64"\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 404] Rx not found"',title:'"[Error:',"404]":!0,Rx:!0,not:!0,'found"':!0},'{\n    "error": "rx not found"\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 401] Invalid Token"',title:'"[Error:',"401]":!0,Invalid:!0,'Token"':!0},'{\n    "message": "Invalid Token"\n}\n')),(0,a.kt)("h2",{id:"search-prescription"},"Search Prescription"),(0,a.kt)("p",null,"A Prescription can be searched by the name of the ",(0,a.kt)("a",{parentName:"p",href:"/prescrypto-docs/docs/api/patient"},"Patient"),", the email, or the diagnosis."),(0,a.kt)("h4",{id:"get-search-prescription"},"GET Search Prescription"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="GET /api/v2/rx-endpoint/?search=Gripe/"',title:'"GET',"/api/v2/rx-endpoint/?search":'Gripe/"'},"import requests\n\nurl = \"{{Base_URL}}/api/v2/rx-endpoint/?search={{query}}\"\n\nheaders = {\n  'Authorization': 'Token {{Token}}'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)\n")),(0,a.kt)("h4",{id:"respose-to-search-prescription"},"Respose to Search Prescription"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 200] Success! "',title:'"[StatusCode:',"200]":!0,"Success!":!0,'"':!0},'{\n    "id": 271,\n    "hospital": {\n        "id": 25,\n        "patron": "Hospital de Prueba",\n        "location": "Nombre de la Calle, Colonia, CP, Alcaldia, Estado"\n    },\n    "clinic": null,\n    "medic": "hola@prescrypto.com",\n    "patient": {\n        "uid": "123123-12312-12312-123-123123123",\n        "name": "Ely de Prescrypto",\n        "email": "hola@prescrypto.com",\n        "phone": "",\n        "date_of_birth": "1983-02-01",\n        "gender": "M"\n    },\n    "diagnosis": "",\n    "medications": [\n        {\n            "id": 23,\n            "presentation": "Aspirina Protect",\n            "instructions": "Tomar 1 pastilla cada 8 horas durante 7 dias",\n            "cost": 0.0,\n            "bought": false,\n            "qty": 1,\n            "bought_qty": 0,\n            "drug_upc": "",\n            "order_id": 0,\n            "category": "standard_drug",\n            "qty_label": "1"\n        }\n    ],\n    "extras": "Indicaciones Extras",\n    "signature": "12344567890",\n    "created_at": "2023-09-08",\n    "sent": null,\n    "send_rx": true,\n    "show_diagnosis": false,\n    "bought": false,\n    "rejected": false,\n    "cta_link": "",\n    "status": {\n        "rx_status": [\n            "available",\n            "Disponible"\n        ],\n        "sent_status": [\n            "pending",\n            "Pendiente de envio"\n        ]\n    },\n    "reason_of_rejected": ""\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 401] Invalid Token"',title:'"[Error:',"401]":!0,Invalid:!0,'Token"':!0},'{\n    "message": "Invalid Token"\n}\n')),(0,a.kt)("p",null,"[EOF]"))}c.isMDXComponent=!0}}]);