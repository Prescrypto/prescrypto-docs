"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[460],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),d=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=d(n),c=r,k=m["".concat(o,".").concat(c)]||m[c]||u[c]||i;return n?a.createElement(k,l(l({ref:t},s),{},{components:n})):a.createElement(k,l({ref:t},s))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7287:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return s},default:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],p={sidebar_position:4},o="Patient",d={unversionedId:"api/patient",id:"api/patient",title:"Patient",description:"The following parameters may be included as part of a URL query string.",source:"@site/docs/api/patient.md",sourceDirName:"api",slug:"/api/patient",permalink:"/prescrypto-docs/docs/api/patient",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Membership",permalink:"/prescrypto-docs/docs/api/membership"},next:{title:"Prescription",permalink:"/prescrypto-docs/docs/api/prescription"}},s=[{value:"List All Patients",id:"list-all-patients",children:[{value:"Response",id:"response",children:[],level:3}],level:2},{value:"List a Singular Patient",id:"list-a-singular-patient",children:[],level:2},{value:"Create Patient",id:"create-patient",children:[{value:"Body Fields",id:"body-fields",children:[],level:3},{value:"Response",id:"response-1",children:[],level:3}],level:2},{value:"Update Patient",id:"update-patient",children:[{value:"Response",id:"response-2",children:[],level:3}],level:2}],u={toc:s};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"patient"},"Patient"),(0,i.kt)("p",null,"The following parameters may be included as part of a URL query string."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"limit"),(0,i.kt)("td",{parentName:"tr",align:null},"Number of results to return per page.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"offset"),(0,i.kt)("td",{parentName:"tr",align:null},"The initial index from which to return the results.")))),(0,i.kt)("h2",{id:"list-all-patients"},"List All Patients"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="GET /api/v2/patient"',title:'"GET','/api/v2/patient"':!0},"import requests\nimport json\n\nurl = \"{{Base_URL}}/api/v2/patient/\"\n\npayload={}\nheaders = {\n  'Authorization': 'Token {{Token}}',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data=payload)\n\nprint(response.text)\n")),(0,i.kt)("h3",{id:"response"},"Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 200] "',title:'"[StatusCode:',"200]":!0,'"':!0},'[\n    {\n        "id": 1,\n        "name": "George Constanza",\n        "email": "hola@prescrypto.com",\n        "date_of_birth": "1990-06-01",\n        "external_patient_file": "",\n        "gender": "M",\n        "curp": "",\n        "phone": "",\n        "address": "",\n        "state": "",\n        "zip_code": "",\n        "location": "",\n        "uid": "b5555-5555-5555-5555-55555555"\n    }\n]\n')),(0,i.kt)("h2",{id:"list-a-singular-patient"},"List a Singular Patient"),(0,i.kt)("p",null,'You can also filter the information for a single patient, by adding the patient "id" or the "uid" to the endpoint route.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="GET /api/v2/patient/{{Patient_ID}}"',title:'"GET','/api/v2/patient/{{Patient_ID}}"':!0},"{{Base_URL}}/api/v2/patient/1/\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="GET /api/v2/patient/{{Patient_uID}}"',title:'"GET','/api/v2/patient/{{Patient_uID}}"':!0},"{{Base_URL}}/api/v2/patient/b5555-5555-5555-5555-55555555/\n")),(0,i.kt)("h2",{id:"create-patient"},"Create Patient"),(0,i.kt)("p",null,"You can create as many Patients as needed."),(0,i.kt)("h3",{id:"body-fields"},"Body Fields"),(0,i.kt)("p",null,"The request body should be a ",(0,i.kt)("inlineCode",{parentName:"p"},"application/json")," encoded object, it may contain the following items."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"name ",(0,i.kt)("inlineCode",{parentName:"td"},"required")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," Name foofr patient")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"email"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," Identifier could be email/id_string > 4 characters")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"date_of_birth ",(0,i.kt)("inlineCode",{parentName:"td"},"required")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," date format YYYY-MM-DD")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"external_patient_file"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," can be the ID of the Patient of your platform")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"gender"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," Gender of the Patient, can be either ",(0,i.kt)("inlineCode",{parentName:"td"},"M"),"ale, ",(0,i.kt)("inlineCode",{parentName:"td"},"F"),"emale or ",(0,i.kt)("inlineCode",{parentName:"td"},"O"),"ther, if none defined it will default to ",(0,i.kt)("inlineCode",{parentName:"td"},"M"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"curp"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")," CURP of the Patient")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"phone"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"state"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"zip_code"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"location"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"uid"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String"),"Unique id of the patient, asigned by Prescrypto")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="POST /api/v2/patient/"',title:'"POST','/api/v2/patient/"':!0},'import requests\nimport json\n\nurl = "{{Base_URL}}/api/v2/patient/"\n\npayload = json.dumps({\n  "name": "Algun Nombre",\n  "date_of_birth": "1994-06-01"\n})\nheaders = {\n  \'Authorization\': \'Token {{Token}}\',\n  \'Content-Type\': \'application/json\'\n}\n\nresponse = requests.request("POST", url, headers=headers, data=payload)\n\nprint(response.text)\n')),(0,i.kt)("h3",{id:"response-1"},"Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 201] The Patient has been created successfully"',title:'"[StatusCode:',"201]":!0,The:!0,Patient:!0,has:!0,been:!0,created:!0,'successfully"':!0},'{\n    "id": 1,\n    "name": "George Constanza",\n    "email": "",\n    "date_of_birth": "1994-06-01",\n    "external_patient_file": "",\n    "gender": "M",\n    "curp": "",\n    "phone": "",\n    "address": "",\n    "state": "",\n    "zip_code": "",\n    "location": "",\n    "uid": "1231231-123123-12313-123-123123123"\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 400] The required field date_of_birth is missing"',title:'"[Error:',"400]":!0,The:!0,required:!0,field:!0,date_of_birth:!0,is:!0,'missing"':!0},'{\n    "date_of_birth": [\n        "Este campo es requerido."\n    ]\n}\n')),(0,i.kt)("h2",{id:"update-patient"},"Update Patient"),(0,i.kt)("p",null,"You can update partial data of a Patient already created."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="PATCH /api/v2/patient/{{patient_ID}}"',title:'"PATCH','/api/v2/patient/{{patient_ID}}"':!0},"import requests\nimport json\n\nurl = \"{{Base_URL}}/api/v2/patient/1/\"\n\npayload = json.dumps({\n  \"name\": \"Kosmo Kramer\"\n})\nheaders = {\n  'Authorization': 'Token {{Token}}',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)\n")),(0,i.kt)("h3",{id:"response-2"},"Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 202] The Medic has been updated successfully"',title:'"[StatusCode:',"202]":!0,The:!0,Medic:!0,has:!0,been:!0,updated:!0,'successfully"':!0},'{\n    "id": 1,\n    "name": "Kosmo Kramer",\n    "email": "",\n    "date_of_birth": "1994-06-01",\n    "external_patient_file": "",\n    "gender": "M",\n    "curp": "",\n    "phone": "",\n    "address": "",\n    "state": "",\n    "zip_code": "",\n    "location": "",\n    "uid": "1231231-123123-12313-123-123123123"\n}\n')),(0,i.kt)("p",null,"[EOF]"))}m.isMDXComponent=!0}}]);