(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[336],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),m=i,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8439:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var n=r(2122),i=r(9756),o=(r(7294),r(3905)),a=["components"],c={sidebar_position:1},s="Intro",l={unversionedId:"deeplink/overview",id:"deeplink/overview",isDocsHomePage:!1,title:"Intro",description:'For this kind of integration the Medic user will access Prescrypto through a "Deeplink", this link will autolog the user and can pre-fill certaing fields as the patient data.',source:"@site/docs/deeplink/overview.md",sourceDirName:"deeplink",slug:"/deeplink/overview",permalink:"/prescrypto-docs/docs/deeplink/overview",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Create a Medic",permalink:"/prescrypto-docs/docs/api/overview"},next:{title:"Medic",permalink:"/prescrypto-docs/docs/deeplink/int_dp_Medic"}},p=[{value:"Medic",id:"medic",children:[]},{value:"POST /api/v2/medics/",id:"post-apiv2medics",children:[]}],u={toc:p};function d(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"intro"},"Intro"),(0,o.kt)("p",null,'For this kind of integration the Medic user will access Prescrypto through a "Deeplink", this link will autolog the user and can pre-fill certaing fields as the patient data.'),(0,o.kt)("h2",{id:"medic"},"Medic"),(0,o.kt)("p",null,'The request body should be a "application/json" encoded object.'),(0,o.kt)("h2",{id:"post-apiv2medics"},"POST /api/v2/medics/"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'mdx title="POST /api/v2/medics/"',mdx:!0,title:'"POST','/api/v2/medics/"':!0},'import requests\nimport json\n# Assign the necessary parameters for the request (url and parameters payload)\nurl = "/api/v2/medics/"\n\nheaders = {\'content-type\': \'application/json\'}\npayload = {\n    "name": <name>,\n    "password": <password>,\n    "email": <email>,\n    "hospital": <hospital>,\n    "date_of_birth": <date_of_birth>,\n    "cedula_prof": <cedula_prof>,\n    "specialty_no": <specialty_no>,\n    "specialty": <specialty>,\n    "alma_mater": <alma_mater>,\n    "female": <female>,\n    "is_active": <is_active>,\n}\n# Execute the request and get the result\nresult = requests.post(url=url, data=json.dumps(payload), headers=headers)\nprint(result.json())\n\n')))}d.isMDXComponent=!0}}]);