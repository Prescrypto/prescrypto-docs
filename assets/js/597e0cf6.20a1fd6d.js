"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[369],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=u;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:o,l[1]=r;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4577:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const i={sidebar_position:8},l="Location",r={unversionedId:"api/location",id:"api/location",title:"Location",description:"A Medic can choose among the different Hospitals in which he has a Memberhip.",source:"@site/docs/api/location.md",sourceDirName:"api",slug:"/api/location",permalink:"/prescrypto-docs/docs/api/location",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Prescription",permalink:"/prescrypto-docs/docs/api/prescription"},next:{title:"Webhooks",permalink:"/prescrypto-docs/docs/api/webhooks"}},s={},c=[{value:"List all Locations",id:"list-all-locations",level:2},{value:"GET List all Locations",id:"get-list-all-locations",level:4},{value:"Response to List all Locations",id:"response-to-list-all-locations",level:4},{value:"Update Locations",id:"update-locations",level:2},{value:"PATCH Update Locations",id:"patch-update-locations",level:4},{value:"Response to List all Locations",id:"response-to-list-all-locations-1",level:4}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"location"},"Location"),(0,o.kt)("p",null,"A Medic can choose among the different ",(0,o.kt)("a",{parentName:"p",href:"/prescrypto-docs/docs/api/hospital"},"Hospitals")," in which he has a ",(0,o.kt)("a",{parentName:"p",href:"/prescrypto-docs/docs/api/membership"},"Memberhip"),". "),(0,o.kt)("p",null,"The use of this endpoint it's focused on integrations where the Medic has access to Prescrypto's UI. "),(0,o.kt)("h2",{id:"list-all-locations"},"List all Locations"),(0,o.kt)("p",null,"It will list the Hospitals in which the Medic has a Membership."),(0,o.kt)("h4",{id:"get-list-all-locations"},"GET List all Locations"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="GET /api/v2/locations/"',title:'"GET','/api/v2/locations/"':!0},"import requests\n\nurl = \"{{Base_URL}}api/v2/locations/\"\n\nheaders = {\n  'Authorization': 'Token {{token}}'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)\n\n")),(0,o.kt)("h4",{id:"response-to-list-all-locations"},"Response to List all Locations"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 200]"',title:'"[StatusCode:','200]"':!0},'[\n    {\n        "hospital": {\n            "name": "Hospital 1",\n            "id": 23,\n            "location": "Nombre de la Calle, Colonia, CP, Alcaldia, Estado"\n        },\n        "default": true,\n        "clinics": [\n            {\n                "id": null,\n                "name": "Cl\xednica 1 del Hospital 2",\n                "location": "Nombre de la Calle, Colonia, CP, Alcaldia, Estado"\n            }\n        ]\n    },\n    {\n        "hospital": {\n            "name": "Hospital 2",\n            "id": 35,\n            "location": "Nombre de la Calle, Colonia, CP, Alcaldia, Estado"\n        },\n        "default": false,\n        "clinics": [\n            {\n                "id": null,\n                "name": "Cl\xednica 1 del Hospital 2",\n                "location": "Nombre de la Calle, Colonia, CP, Alcaldia, Estado"\n            }\n        ]\n    }\n]\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 401] Invalid Token"',title:'"[Error:',"401]":!0,Invalid:!0,'Token"':!0},'{\n    "message": "Invalid Token"\n}\n')),(0,o.kt)("h2",{id:"update-locations"},"Update Locations"),(0,o.kt)("p",null,'It will change the default "Active" Hospital for which the Medic will prescribe.'),(0,o.kt)("h4",{id:"patch-update-locations"},"PATCH Update Locations"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="PATCH /api/v2/locations/update/"',title:'"PATCH','/api/v2/locations/update/"':!0},"import requests\n\nurl = \"{{Base_URL}}api/v2/locations/update/\"\n\npayload={\n  \"hospital_id\": 35\n}\n\nheaders = {\n  'Authorization': 'Token {{token}}',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"PATCH\", url, headers=headers, data=payload)\n\nprint(response.text)\n\n")),(0,o.kt)("h4",{id:"response-to-list-all-locations-1"},"Response to List all Locations"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[StatusCode: 200]"',title:'"[StatusCode:','200]"':!0},'{\n    "message": "Hopsital Update Successful"\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 404] Hospital not found"',title:'"[Error:',"404]":!0,Hospital:!0,not:!0,'found"':!0},'{\n    "message": "Hopsital not found"\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="[Error: 401] Invalid Token"',title:'"[Error:',"401]":!0,Invalid:!0,'Token"':!0},'{\n    "message": "Invalid Token"\n}\n')),(0,o.kt)("p",null,"[EOF]"))}d.isMDXComponent=!0}}]);